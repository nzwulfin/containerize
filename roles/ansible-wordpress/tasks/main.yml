---
    - name: Install Apache and PHP
      yum:
        name: "{{ item }}"
        state: present
      with_items:
        - httpd
        - php
        - php-mysql

#    - name: Wordpresss | Download {{wp_version}} to /tmp
#      get_url:
#        url: http://wordpress.org/wordpress-{{wp_version}}.tar.gz
#        dest: /tmp/wordpress-{{wp_version}}.tar.gz
      # TODO sha256sum="{{ wp_sha256sum }}"

    - name: Wordpress | Create site directory
      file:
        path: "{{ wp_install_dir }}"
        state: directory
        owner: apache
        group: apache
        selevel: s0
        serole: object_r
        setype: httpd_sys_content_t
        seuser: unconfined_u

    - name: Wordpresss | Extract archive
      unarchive:
        src: http://wordpress.org/wordpress-{{wp_version}}.tar.gz
        dest: "{{ wp_install_dir | dirname }}"
        copy: no
        owner: apache
        group: apache
        selevel: s0
        serole: object_r
        setype: httpd_sys_content_t
        seuser: unconfined_u

    - name: Wordpresss | Fetch random salts for wp-config.php
      local_action: command curl https://api.wordpress.org/secret-key/1.1/salt/
      sudo: no
      register: 'wp_salt'

    - name: Wordpresss | Copy wp-config.php file
      template: src=wp-config.php.j2 dest={{wp_install_dir}}/wp-config.php

#    - name: Wordpresss | Change ownership of installation directory
#      file: path={{wp_install_dir}} owner=apache group=apache state=directory recurse=yes

#    - name: Wordpresss | Change ownership of uploads directory
#      file: path={{wp_install_dir}}/wp-content/uploads/ owner=apache group=apache state=directory recurse=yes

#    - name: Reset SElinux context
#      file:
#        path: "{{ wp_install_dir|dirname }}"
#        selevel: s0
#        serole: object_r
#        setype: httpd_sys_content_t
#        seuser: unconfined_u
#        state: directory

    - name: Start Apache
      service:
        name: httpd
        state: started
      when: ansible_virtualization_type != "docker"

    - name: Start Apache in container
      shell: /usr/sbin/httpd $OPTIONS -DFOREGROUND &
      when: ansible_virtualization_type == "docker"

    - name: Open HTTP port
      command: firewall-cmd --add-service http {{ item }}
      with_items:
        - ''
        - --permanent
      when: ansible_virtualization_type != "docker"
